import { useState } from "react";

interface Activity {
  id: number;
  type: "attendance" | "leave" | "salary" | "task" | "notification";
  title: string;
  description: string;
  time: string;
  status?: "success" | "pending" | "warning" | "info";
  icon: string;
  color: string;
}

export default function RecentActivities() {
  const [activities] = useState<Activity[]>([
    {
      id: 1,
      type: "leave",
      title: "ƒê∆°n ngh·ªâ ph√©p ƒë∆∞·ª£c duy·ªát",
      description: "ƒê∆°n xin ngh·ªâ ng√†y 15/08/2025 ƒë√£ ƒë∆∞·ª£c Manager ph√™ duy·ªát",
      time: "2 gi·ªù tr∆∞·ªõc",
      status: "success",
      icon: "‚úÖ",
      color: "text-green-600"
    },
    {
      id: 2,
      type: "task",
      title: "Ho√†n th√†nh task #1245",
      description: "C·∫≠p nh·∫≠t giao di·ªán trang dashboard ƒë√£ ho√†n th√†nh",
      time: "4 gi·ªù tr∆∞·ªõc",
      status: "success",
      icon: "üéØ",
      color: "text-blue-600"
    },
    {
      id: 3,
      type: "attendance",
      title: "Ch·∫•m c√¥ng h√¥m nay",
      description: "Ch·∫•m c√¥ng v√†o l√∫c 08:15 AM - ƒê√∫ng gi·ªù",
      time: "H√¥m nay",
      status: "success",
      icon: "‚è∞",
      color: "text-green-600"
    },
    {
      id: 4,
      type: "leave",
      title: "T·∫°o ƒë∆°n xin ngh·ªâ",
      description: "ƒê√£ t·∫°o ƒë∆°n xin ngh·ªâ ng√†y 20/08/2025 - Ch·ªù duy·ªát",
      time: "1 ng√†y tr∆∞·ªõc",
      status: "pending",
      icon: "üìù",
      color: "text-yellow-600"
    },
    {
      id: 5,
      type: "salary",
      title: "B·∫£ng l∆∞∆°ng th√°ng 7",
      description: "B·∫£ng l∆∞∆°ng th√°ng 7/2025 ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t",
      time: "3 ng√†y tr∆∞·ªõc",
      status: "info",
      icon: "üí∞",
      color: "text-purple-600"
    },
    {
      id: 6,
      type: "notification",
      title: "Th√¥ng b√°o ngh·ªâ l·ªÖ",
      description: "Th√¥ng b√°o l·ªãch ngh·ªâ l·ªÖ Qu·ªëc kh√°nh 2/9",
      time: "1 tu·∫ßn tr∆∞·ªõc",
      status: "info",
      icon: "üîî",
      color: "text-gray-600"
    }
  ]);

  const getStatusBadge = (status?: string) => {
    switch (status) {
      case "success":
        return "bg-green-100 text-green-800";
      case "pending":
        return "bg-yellow-100 text-yellow-800";
      case "warning":
        return "bg-red-100 text-red-800";
      case "info":
        return "bg-blue-100 text-blue-800";
      default:
        return "bg-gray-100 text-gray-800";
    }
  };

  const getTypeLabel = (type: string) => {
    switch (type) {
      case "attendance": return "Ch·∫•m c√¥ng";
      case "leave": return "Ngh·ªâ ph√©p";
      case "salary": return "L∆∞∆°ng";
      case "task": return "C√¥ng vi·ªác";
      case "notification": return "Th√¥ng b√°o";
      default: return "Kh√°c";
    }
  };

  return (
    <div className="bg-white rounded-2xl border border-gray-200 p-6">
      <div className="flex items-center justify-between mb-6">
        <div>
          <h3 className="text-lg font-semibold text-gray-900">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
          <p className="text-sm text-gray-500 mt-1">Theo d√µi c√°c ho·∫°t ƒë·ªông m·ªõi nh·∫•t c·ªßa b·∫°n</p>
        </div>
        <button className="text-sm text-blue-600 hover:text-blue-800 font-medium">
          Xem t·∫•t c·∫£
        </button>
      </div>

      <div className="space-y-4">
        {activities.map((activity) => (
          <div key={activity.id} className="flex gap-4 p-4 hover:bg-gray-50 rounded-xl transition-colors">
            {/* Icon */}
            <div className="flex-shrink-0">
              <div className="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
                <span className="text-lg">{activity.icon}</span>
              </div>
            </div>

            {/* Content */}
            <div className="flex-1 min-w-0">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <h4 className="text-sm font-medium text-gray-900 truncate">
                      {activity.title}
                    </h4>
                    {activity.status && (
                      <span className={`inline-flex px-2 py-0.5 text-xs font-medium rounded-full ${getStatusBadge(activity.status)}`}>
                        {getTypeLabel(activity.type)}
                      </span>
                    )}
                  </div>
                  <p className="text-sm text-gray-600 line-clamp-2">
                    {activity.description}
                  </p>
                </div>
                <div className="flex-shrink-0 ml-4">
                  <span className="text-xs text-gray-500">{activity.time}</span>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Quick Actions */}
      <div className="mt-6 pt-6 border-t border-gray-100">
        <h4 className="text-sm font-medium text-gray-900 mb-4">Thao t√°c nhanh</h4>
        <div className="grid grid-cols-2 sm:grid-cols-4 gap-3">
          <button className="flex flex-col items-center gap-2 p-3 bg-blue-50 hover:bg-blue-100 rounded-xl transition-colors group">
            <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
              <span className="text-white text-sm">üìÑ</span>
            </div>
            <span className="text-xs text-blue-700 font-medium">T·∫°o ƒë∆°n ngh·ªâ</span>
          </button>

          <button className="flex flex-col items-center gap-2 p-3 bg-green-50 hover:bg-green-100 rounded-xl transition-colors group">
            <div className="w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
              <span className="text-white text-sm">‚è∞</span>
            </div>
            <span className="text-xs text-green-700 font-medium">Ch·∫•m c√¥ng</span>
          </button>

          <button className="flex flex-col items-center gap-2 p-3 bg-purple-50 hover:bg-purple-100 rounded-xl transition-colors group">
            <div className="w-8 h-8 bg-purple-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
              <span className="text-white text-sm">üí∞</span>
            </div>
            <span className="text-xs text-purple-700 font-medium">B·∫£ng l∆∞∆°ng</span>
          </button>

          <button className="flex flex-col items-center gap-2 p-3 bg-orange-50 hover:bg-orange-100 rounded-xl transition-colors group">
            <div className="w-8 h-8 bg-orange-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
              <span className="text-white text-sm">üë§</span>
            </div>
            <span className="text-xs text-orange-700 font-medium">H·ªì s∆°</span>
          </button>
        </div>
      </div>
    </div>
  );
}
